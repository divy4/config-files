#!/usr/bin/bash

unset AWS_DEFAULT_REGION AWS_ROLE_ARN AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

export AWS_DEFAULT_REGION=us-east-2

# Get login creds from user
echo "Login credentials json:"
read -rs AUTH_AWS_USER_CREDS

# Authenticate as user
AWS_ROLE_ARN="$(echo "$AUTH_AWS_USER_CREDS" | jq --raw-output '.AWS_ROLE_ARN')"
AWS_ACCESS_KEY_ID="$(echo "$AUTH_AWS_USER_CREDS" | jq --raw-output '.AWS_ACCESS_KEY_ID')"
AWS_SECRET_ACCESS_KEY="$(echo "$AUTH_AWS_USER_CREDS" | jq --raw-output '.AWS_SECRET_ACCESS_KEY')"
export AWS_ROLE_ARN AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY

# Generate role session creds
AUTH_AWS_ROLE_CREDS="$(
  aws sts assume-role --output json --duration-seconds 3600 \
    --role-arn "$AWS_ROLE_ARN" --role-session-name "$HOST-$(date +%s)"
)"

# Authenticate as role
AWS_ACCESS_KEY_ID="$(echo "$AUTH_AWS_ROLE_CREDS" | jq --raw-output '.Credentials.AccessKeyId')"
AWS_SECRET_ACCESS_KEY="$(echo "$AUTH_AWS_ROLE_CREDS" | jq --raw-output '.Credentials.SecretAccessKey')"
AWS_SESSION_TOKEN="$(echo "$AUTH_AWS_ROLE_CREDS" | jq --raw-output '.Credentials.SessionToken')"
export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

# Clean up credentials
unset AUTH_AWS_USER_CREDS AUTH_AWS_ROLE_CREDS

# Print if it was successful or not
if aws sts get-caller-identity > /dev/null; then
  echo "Successfully logged in as $AWS_ROLE_ARN."
else
  echo "Failed to log in as $AWS_ROLE_ARN."
fi
